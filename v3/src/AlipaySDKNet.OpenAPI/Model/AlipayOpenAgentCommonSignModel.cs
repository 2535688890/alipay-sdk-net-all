/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-04-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayOpenAgentCommonSignModel
    /// </summary>
    [DataContract(Name = "AlipayOpenAgentCommonSignModel")]
    public partial class AlipayOpenAgentCommonSignModel : IEquatable<AlipayOpenAgentCommonSignModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayOpenAgentCommonSignModel" /> class.
        /// </summary>
        /// <param name="alipayLifeName">支付宝生活号(原服务窗)名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）.</param>
        /// <param name="appName">商户的APP应用名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）.</param>
        /// <param name="batchNo">代商户操作事务编号，通过alipay.open.agent.create接口进行创建。.</param>
        /// <param name="businessLicenseNo">营业执照号码.</param>
        /// <param name="dateLimitation">营业期限.</param>
        /// <param name="longTerm">营业期限是否长期有效.</param>
        /// <param name="mccCode">&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/common/02khjv\&quot;&gt;商家经营类目&lt;/a&gt; 中的“经营类目编码”.</param>
        /// <param name="productCode">isv要代商户签约产品码，产品码是支付宝内部对产品的唯一标识.</param>
        /// <param name="webSites">接入网址信息（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）.</param>
        /// <param name="webStatus">网站状态，枚举值为：已上线，未上线.</param>
        /// <param name="webTestAccount">可以登录此网站的测试账户.</param>
        /// <param name="webTestAccountPassword">可以登录此网站的账户的密码。对应web_test_account的登录密码.</param>
        /// <param name="wechatOfficialAccountName">微信公众号名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）.</param>
        public AlipayOpenAgentCommonSignModel(string alipayLifeName = default(string), string appName = default(string), string batchNo = default(string), string businessLicenseNo = default(string), string dateLimitation = default(string), bool longTerm = default(bool), string mccCode = default(string), string productCode = default(string), List<string> webSites = default(List<string>), string webStatus = default(string), string webTestAccount = default(string), string webTestAccountPassword = default(string), string wechatOfficialAccountName = default(string))
        {
            this.AlipayLifeName = alipayLifeName;
            this.AppName = appName;
            this.BatchNo = batchNo;
            this.BusinessLicenseNo = businessLicenseNo;
            this.DateLimitation = dateLimitation;
            this.LongTerm = longTerm;
            this.MccCode = mccCode;
            this.ProductCode = productCode;
            this.WebSites = webSites;
            this.WebStatus = webStatus;
            this.WebTestAccount = webTestAccount;
            this.WebTestAccountPassword = webTestAccountPassword;
            this.WechatOfficialAccountName = wechatOfficialAccountName;
        }

        /// <summary>
        /// 支付宝生活号(原服务窗)名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）
        /// </summary>
        /// <value>支付宝生活号(原服务窗)名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）</value>
        [DataMember(Name = "alipay_life_name", EmitDefaultValue = false)]
        public string AlipayLifeName { get; set; }

        /// <summary>
        /// 商户的APP应用名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）
        /// </summary>
        /// <value>商户的APP应用名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）</value>
        [DataMember(Name = "app_name", EmitDefaultValue = false)]
        public string AppName { get; set; }

        /// <summary>
        /// 代商户操作事务编号，通过alipay.open.agent.create接口进行创建。
        /// </summary>
        /// <value>代商户操作事务编号，通过alipay.open.agent.create接口进行创建。</value>
        [DataMember(Name = "batch_no", EmitDefaultValue = false)]
        public string BatchNo { get; set; }

        /// <summary>
        /// 营业执照号码
        /// </summary>
        /// <value>营业执照号码</value>
        [DataMember(Name = "business_license_no", EmitDefaultValue = false)]
        public string BusinessLicenseNo { get; set; }

        /// <summary>
        /// 营业期限
        /// </summary>
        /// <value>营业期限</value>
        [DataMember(Name = "date_limitation", EmitDefaultValue = false)]
        public string DateLimitation { get; set; }

        /// <summary>
        /// 营业期限是否长期有效
        /// </summary>
        /// <value>营业期限是否长期有效</value>
        [DataMember(Name = "long_term", EmitDefaultValue = true)]
        public bool LongTerm { get; set; }

        /// <summary>
        /// &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/common/02khjv\&quot;&gt;商家经营类目&lt;/a&gt; 中的“经营类目编码”
        /// </summary>
        /// <value>&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/common/02khjv\&quot;&gt;商家经营类目&lt;/a&gt; 中的“经营类目编码”</value>
        [DataMember(Name = "mcc_code", EmitDefaultValue = false)]
        public string MccCode { get; set; }

        /// <summary>
        /// isv要代商户签约产品码，产品码是支付宝内部对产品的唯一标识
        /// </summary>
        /// <value>isv要代商户签约产品码，产品码是支付宝内部对产品的唯一标识</value>
        [DataMember(Name = "product_code", EmitDefaultValue = false)]
        public string ProductCode { get; set; }

        /// <summary>
        /// 接入网址信息（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）
        /// </summary>
        /// <value>接入网址信息（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）</value>
        [DataMember(Name = "web_sites", EmitDefaultValue = false)]
        public List<string> WebSites { get; set; }

        /// <summary>
        /// 网站状态，枚举值为：已上线，未上线
        /// </summary>
        /// <value>网站状态，枚举值为：已上线，未上线</value>
        [DataMember(Name = "web_status", EmitDefaultValue = false)]
        public string WebStatus { get; set; }

        /// <summary>
        /// 可以登录此网站的测试账户
        /// </summary>
        /// <value>可以登录此网站的测试账户</value>
        [DataMember(Name = "web_test_account", EmitDefaultValue = false)]
        public string WebTestAccount { get; set; }

        /// <summary>
        /// 可以登录此网站的账户的密码。对应web_test_account的登录密码
        /// </summary>
        /// <value>可以登录此网站的账户的密码。对应web_test_account的登录密码</value>
        [DataMember(Name = "web_test_account_password", EmitDefaultValue = false)]
        public string WebTestAccountPassword { get; set; }

        /// <summary>
        /// 微信公众号名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）
        /// </summary>
        /// <value>微信公众号名称（1 app_name、app_demo；2 web_sites；3 alipay_life_name；4 wechat_official_account_name。1、2、3、4至少选择一个填写）</value>
        [DataMember(Name = "wechat_official_account_name", EmitDefaultValue = false)]
        public string WechatOfficialAccountName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayOpenAgentCommonSignModel {\n");
            sb.Append("  AlipayLifeName: ").Append(AlipayLifeName).Append("\n");
            sb.Append("  AppName: ").Append(AppName).Append("\n");
            sb.Append("  BatchNo: ").Append(BatchNo).Append("\n");
            sb.Append("  BusinessLicenseNo: ").Append(BusinessLicenseNo).Append("\n");
            sb.Append("  DateLimitation: ").Append(DateLimitation).Append("\n");
            sb.Append("  LongTerm: ").Append(LongTerm).Append("\n");
            sb.Append("  MccCode: ").Append(MccCode).Append("\n");
            sb.Append("  ProductCode: ").Append(ProductCode).Append("\n");
            sb.Append("  WebSites: ").Append(WebSites).Append("\n");
            sb.Append("  WebStatus: ").Append(WebStatus).Append("\n");
            sb.Append("  WebTestAccount: ").Append(WebTestAccount).Append("\n");
            sb.Append("  WebTestAccountPassword: ").Append(WebTestAccountPassword).Append("\n");
            sb.Append("  WechatOfficialAccountName: ").Append(WechatOfficialAccountName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayOpenAgentCommonSignModel);
        }

        /// <summary>
        /// Returns true if AlipayOpenAgentCommonSignModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayOpenAgentCommonSignModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayOpenAgentCommonSignModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AlipayLifeName == input.AlipayLifeName ||
                    (this.AlipayLifeName != null &&
                    this.AlipayLifeName.Equals(input.AlipayLifeName))
                ) && 
                (
                    this.AppName == input.AppName ||
                    (this.AppName != null &&
                    this.AppName.Equals(input.AppName))
                ) && 
                (
                    this.BatchNo == input.BatchNo ||
                    (this.BatchNo != null &&
                    this.BatchNo.Equals(input.BatchNo))
                ) && 
                (
                    this.BusinessLicenseNo == input.BusinessLicenseNo ||
                    (this.BusinessLicenseNo != null &&
                    this.BusinessLicenseNo.Equals(input.BusinessLicenseNo))
                ) && 
                (
                    this.DateLimitation == input.DateLimitation ||
                    (this.DateLimitation != null &&
                    this.DateLimitation.Equals(input.DateLimitation))
                ) && 
                (
                    this.LongTerm == input.LongTerm ||
                    this.LongTerm.Equals(input.LongTerm)
                ) && 
                (
                    this.MccCode == input.MccCode ||
                    (this.MccCode != null &&
                    this.MccCode.Equals(input.MccCode))
                ) && 
                (
                    this.ProductCode == input.ProductCode ||
                    (this.ProductCode != null &&
                    this.ProductCode.Equals(input.ProductCode))
                ) && 
                (
                    this.WebSites == input.WebSites ||
                    this.WebSites != null &&
                    input.WebSites != null &&
                    this.WebSites.SequenceEqual(input.WebSites)
                ) && 
                (
                    this.WebStatus == input.WebStatus ||
                    (this.WebStatus != null &&
                    this.WebStatus.Equals(input.WebStatus))
                ) && 
                (
                    this.WebTestAccount == input.WebTestAccount ||
                    (this.WebTestAccount != null &&
                    this.WebTestAccount.Equals(input.WebTestAccount))
                ) && 
                (
                    this.WebTestAccountPassword == input.WebTestAccountPassword ||
                    (this.WebTestAccountPassword != null &&
                    this.WebTestAccountPassword.Equals(input.WebTestAccountPassword))
                ) && 
                (
                    this.WechatOfficialAccountName == input.WechatOfficialAccountName ||
                    (this.WechatOfficialAccountName != null &&
                    this.WechatOfficialAccountName.Equals(input.WechatOfficialAccountName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AlipayLifeName != null)
                {
                    hashCode = (hashCode * 59) + this.AlipayLifeName.GetHashCode();
                }
                if (this.AppName != null)
                {
                    hashCode = (hashCode * 59) + this.AppName.GetHashCode();
                }
                if (this.BatchNo != null)
                {
                    hashCode = (hashCode * 59) + this.BatchNo.GetHashCode();
                }
                if (this.BusinessLicenseNo != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessLicenseNo.GetHashCode();
                }
                if (this.DateLimitation != null)
                {
                    hashCode = (hashCode * 59) + this.DateLimitation.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.LongTerm.GetHashCode();
                if (this.MccCode != null)
                {
                    hashCode = (hashCode * 59) + this.MccCode.GetHashCode();
                }
                if (this.ProductCode != null)
                {
                    hashCode = (hashCode * 59) + this.ProductCode.GetHashCode();
                }
                if (this.WebSites != null)
                {
                    hashCode = (hashCode * 59) + this.WebSites.GetHashCode();
                }
                if (this.WebStatus != null)
                {
                    hashCode = (hashCode * 59) + this.WebStatus.GetHashCode();
                }
                if (this.WebTestAccount != null)
                {
                    hashCode = (hashCode * 59) + this.WebTestAccount.GetHashCode();
                }
                if (this.WebTestAccountPassword != null)
                {
                    hashCode = (hashCode * 59) + this.WebTestAccountPassword.GetHashCode();
                }
                if (this.WechatOfficialAccountName != null)
                {
                    hashCode = (hashCode * 59) + this.WechatOfficialAccountName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
