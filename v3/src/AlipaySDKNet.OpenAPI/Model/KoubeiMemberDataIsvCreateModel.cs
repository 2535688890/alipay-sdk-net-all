/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-04-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// KoubeiMemberDataIsvCreateModel
    /// </summary>
    [DataContract(Name = "KoubeiMemberDataIsvCreateModel")]
    public partial class KoubeiMemberDataIsvCreateModel : IEquatable<KoubeiMemberDataIsvCreateModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KoubeiMemberDataIsvCreateModel" /> class.
        /// </summary>
        /// <param name="gmtMemberCardLastActive">会员卡最近一次激活时间，格式：yyyy-MM-dd HH:MM:ss.</param>
        /// <param name="gmtMerberCardCreate">会员卡领取时间（开卡时间），格式：yyyy-MM-dd HH:mm:ss.</param>
        /// <param name="memberCardId">会员卡卡号：唯一标识会员卡的ID，partner_id+member_card_id是唯一主键，若partner_id+member_card_id已存在，则做更新会员卡操作。.</param>
        /// <param name="memberCardType">会员卡类型：  微卡、炫酷卡、儿童卡、璀璨卡、金卡银卡、白金卡等.</param>
        /// <param name="memberShip">memberShip.</param>
        /// <param name="memberSource">会员来源：  1：weixin（微信）；2：alipay（支付宝）；3：offline（线下会员卡）；4：other（其他）.</param>
        /// <param name="memberSourceDesc">会员来源描述：如美团、饿了么等.</param>
        /// <param name="memberStatus">会员状态：  1：生效；0：失效.</param>
        /// <param name="outerMemberInfo">outerMemberInfo.</param>
        /// <param name="parterId">商户的PID.</param>
        /// <param name="shopId">会员卡领取的门店ID.</param>
        public KoubeiMemberDataIsvCreateModel(string gmtMemberCardLastActive = default(string), string gmtMerberCardCreate = default(string), string memberCardId = default(string), string memberCardType = default(string), MemberShip memberShip = default(MemberShip), string memberSource = default(string), string memberSourceDesc = default(string), string memberStatus = default(string), OuterMemberInfo outerMemberInfo = default(OuterMemberInfo), string parterId = default(string), string shopId = default(string))
        {
            this.GmtMemberCardLastActive = gmtMemberCardLastActive;
            this.GmtMerberCardCreate = gmtMerberCardCreate;
            this.MemberCardId = memberCardId;
            this.MemberCardType = memberCardType;
            this.MemberShip = memberShip;
            this.MemberSource = memberSource;
            this.MemberSourceDesc = memberSourceDesc;
            this.MemberStatus = memberStatus;
            this.OuterMemberInfo = outerMemberInfo;
            this.ParterId = parterId;
            this.ShopId = shopId;
        }

        /// <summary>
        /// 会员卡最近一次激活时间，格式：yyyy-MM-dd HH:MM:ss
        /// </summary>
        /// <value>会员卡最近一次激活时间，格式：yyyy-MM-dd HH:MM:ss</value>
        [DataMember(Name = "gmt_member_card_last_active", EmitDefaultValue = false)]
        public string GmtMemberCardLastActive { get; set; }

        /// <summary>
        /// 会员卡领取时间（开卡时间），格式：yyyy-MM-dd HH:mm:ss
        /// </summary>
        /// <value>会员卡领取时间（开卡时间），格式：yyyy-MM-dd HH:mm:ss</value>
        [DataMember(Name = "gmt_merber_card_create", EmitDefaultValue = false)]
        public string GmtMerberCardCreate { get; set; }

        /// <summary>
        /// 会员卡卡号：唯一标识会员卡的ID，partner_id+member_card_id是唯一主键，若partner_id+member_card_id已存在，则做更新会员卡操作。
        /// </summary>
        /// <value>会员卡卡号：唯一标识会员卡的ID，partner_id+member_card_id是唯一主键，若partner_id+member_card_id已存在，则做更新会员卡操作。</value>
        [DataMember(Name = "member_card_id", EmitDefaultValue = false)]
        public string MemberCardId { get; set; }

        /// <summary>
        /// 会员卡类型：  微卡、炫酷卡、儿童卡、璀璨卡、金卡银卡、白金卡等
        /// </summary>
        /// <value>会员卡类型：  微卡、炫酷卡、儿童卡、璀璨卡、金卡银卡、白金卡等</value>
        [DataMember(Name = "member_card_type", EmitDefaultValue = false)]
        public string MemberCardType { get; set; }

        /// <summary>
        /// Gets or Sets MemberShip
        /// </summary>
        [DataMember(Name = "member_ship", EmitDefaultValue = false)]
        public MemberShip MemberShip { get; set; }

        /// <summary>
        /// 会员来源：  1：weixin（微信）；2：alipay（支付宝）；3：offline（线下会员卡）；4：other（其他）
        /// </summary>
        /// <value>会员来源：  1：weixin（微信）；2：alipay（支付宝）；3：offline（线下会员卡）；4：other（其他）</value>
        [DataMember(Name = "member_source", EmitDefaultValue = false)]
        public string MemberSource { get; set; }

        /// <summary>
        /// 会员来源描述：如美团、饿了么等
        /// </summary>
        /// <value>会员来源描述：如美团、饿了么等</value>
        [DataMember(Name = "member_source_desc", EmitDefaultValue = false)]
        public string MemberSourceDesc { get; set; }

        /// <summary>
        /// 会员状态：  1：生效；0：失效
        /// </summary>
        /// <value>会员状态：  1：生效；0：失效</value>
        [DataMember(Name = "member_status", EmitDefaultValue = false)]
        public string MemberStatus { get; set; }

        /// <summary>
        /// Gets or Sets OuterMemberInfo
        /// </summary>
        [DataMember(Name = "outer_member_info", EmitDefaultValue = false)]
        public OuterMemberInfo OuterMemberInfo { get; set; }

        /// <summary>
        /// 商户的PID
        /// </summary>
        /// <value>商户的PID</value>
        [DataMember(Name = "parter_id", EmitDefaultValue = false)]
        public string ParterId { get; set; }

        /// <summary>
        /// 会员卡领取的门店ID
        /// </summary>
        /// <value>会员卡领取的门店ID</value>
        [DataMember(Name = "shop_id", EmitDefaultValue = false)]
        public string ShopId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KoubeiMemberDataIsvCreateModel {\n");
            sb.Append("  GmtMemberCardLastActive: ").Append(GmtMemberCardLastActive).Append("\n");
            sb.Append("  GmtMerberCardCreate: ").Append(GmtMerberCardCreate).Append("\n");
            sb.Append("  MemberCardId: ").Append(MemberCardId).Append("\n");
            sb.Append("  MemberCardType: ").Append(MemberCardType).Append("\n");
            sb.Append("  MemberShip: ").Append(MemberShip).Append("\n");
            sb.Append("  MemberSource: ").Append(MemberSource).Append("\n");
            sb.Append("  MemberSourceDesc: ").Append(MemberSourceDesc).Append("\n");
            sb.Append("  MemberStatus: ").Append(MemberStatus).Append("\n");
            sb.Append("  OuterMemberInfo: ").Append(OuterMemberInfo).Append("\n");
            sb.Append("  ParterId: ").Append(ParterId).Append("\n");
            sb.Append("  ShopId: ").Append(ShopId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KoubeiMemberDataIsvCreateModel);
        }

        /// <summary>
        /// Returns true if KoubeiMemberDataIsvCreateModel instances are equal
        /// </summary>
        /// <param name="input">Instance of KoubeiMemberDataIsvCreateModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KoubeiMemberDataIsvCreateModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.GmtMemberCardLastActive == input.GmtMemberCardLastActive ||
                    (this.GmtMemberCardLastActive != null &&
                    this.GmtMemberCardLastActive.Equals(input.GmtMemberCardLastActive))
                ) && 
                (
                    this.GmtMerberCardCreate == input.GmtMerberCardCreate ||
                    (this.GmtMerberCardCreate != null &&
                    this.GmtMerberCardCreate.Equals(input.GmtMerberCardCreate))
                ) && 
                (
                    this.MemberCardId == input.MemberCardId ||
                    (this.MemberCardId != null &&
                    this.MemberCardId.Equals(input.MemberCardId))
                ) && 
                (
                    this.MemberCardType == input.MemberCardType ||
                    (this.MemberCardType != null &&
                    this.MemberCardType.Equals(input.MemberCardType))
                ) && 
                (
                    this.MemberShip == input.MemberShip ||
                    (this.MemberShip != null &&
                    this.MemberShip.Equals(input.MemberShip))
                ) && 
                (
                    this.MemberSource == input.MemberSource ||
                    (this.MemberSource != null &&
                    this.MemberSource.Equals(input.MemberSource))
                ) && 
                (
                    this.MemberSourceDesc == input.MemberSourceDesc ||
                    (this.MemberSourceDesc != null &&
                    this.MemberSourceDesc.Equals(input.MemberSourceDesc))
                ) && 
                (
                    this.MemberStatus == input.MemberStatus ||
                    (this.MemberStatus != null &&
                    this.MemberStatus.Equals(input.MemberStatus))
                ) && 
                (
                    this.OuterMemberInfo == input.OuterMemberInfo ||
                    (this.OuterMemberInfo != null &&
                    this.OuterMemberInfo.Equals(input.OuterMemberInfo))
                ) && 
                (
                    this.ParterId == input.ParterId ||
                    (this.ParterId != null &&
                    this.ParterId.Equals(input.ParterId))
                ) && 
                (
                    this.ShopId == input.ShopId ||
                    (this.ShopId != null &&
                    this.ShopId.Equals(input.ShopId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GmtMemberCardLastActive != null)
                {
                    hashCode = (hashCode * 59) + this.GmtMemberCardLastActive.GetHashCode();
                }
                if (this.GmtMerberCardCreate != null)
                {
                    hashCode = (hashCode * 59) + this.GmtMerberCardCreate.GetHashCode();
                }
                if (this.MemberCardId != null)
                {
                    hashCode = (hashCode * 59) + this.MemberCardId.GetHashCode();
                }
                if (this.MemberCardType != null)
                {
                    hashCode = (hashCode * 59) + this.MemberCardType.GetHashCode();
                }
                if (this.MemberShip != null)
                {
                    hashCode = (hashCode * 59) + this.MemberShip.GetHashCode();
                }
                if (this.MemberSource != null)
                {
                    hashCode = (hashCode * 59) + this.MemberSource.GetHashCode();
                }
                if (this.MemberSourceDesc != null)
                {
                    hashCode = (hashCode * 59) + this.MemberSourceDesc.GetHashCode();
                }
                if (this.MemberStatus != null)
                {
                    hashCode = (hashCode * 59) + this.MemberStatus.GetHashCode();
                }
                if (this.OuterMemberInfo != null)
                {
                    hashCode = (hashCode * 59) + this.OuterMemberInfo.GetHashCode();
                }
                if (this.ParterId != null)
                {
                    hashCode = (hashCode * 59) + this.ParterId.GetHashCode();
                }
                if (this.ShopId != null)
                {
                    hashCode = (hashCode * 59) + this.ShopId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
