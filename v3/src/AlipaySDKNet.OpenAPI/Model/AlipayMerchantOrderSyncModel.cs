/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-07-17
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// AlipayMerchantOrderSyncModel
    /// </summary>
    [DataContract(Name = "AlipayMerchantOrderSyncModel")]
    public partial class AlipayMerchantOrderSyncModel : IEquatable<AlipayMerchantOrderSyncModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayMerchantOrderSyncModel" /> class.
        /// </summary>
        /// <param name="amount">订单金额，单位为【元】。SERVICE_ORDER且不涉及金额可不传入该字段，其他场景必传.</param>
        /// <param name="buyerId">买家userId.</param>
        /// <param name="buyerInfo">buyerInfo.</param>
        /// <param name="buyerOpenId">OpenId是用户（buyer_id）在应用（AppId）下的唯一用户标识..</param>
        /// <param name="categoryId">标准服务类目.</param>
        /// <param name="discountAmount">优惠金额，单位为【元】.</param>
        /// <param name="discountInfoList">订单优惠信息.</param>
        /// <param name="extInfo">扩展信息，请参见 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/introduce/ordercenter\&quot;&gt;小程序订单中心&lt;/a&gt;；&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/00nnt3\&quot;&gt;扫码点餐&lt;/a&gt;产品文档。.</param>
        /// <param name="itemOrderList">商品信息列表.</param>
        /// <param name="journeyOrderList">行程信息.</param>
        /// <param name="logisticsInfoList">物流信息  列表最多支持物流信息个数，请参考产品文档  注：若该值不为空，且物流信息同步至我的快递，则在查询订单时可返回具体物流信息.</param>
        /// <param name="orderAuthCode">本字段已废弃，无需填写！.</param>
        /// <param name="orderCreateTime">订单创建时间 当order_type为SERVICE_ORDER时必传.</param>
        /// <param name="orderModifiedTime">订单修改时间。用于订单状态或数据变化较快的顺序控制，SERVICE_ORDER按照行业标准化接入场景必须传入该字段控制乱序。order_modified_time较晚的同步会被最终存储，order_modified_time相同的两次同步会被幂等处理.</param>
        /// <param name="orderPayTime">订单支付时间 当pay_channel为非ALIPAY时，且订单状态已流转到“支付”或支付后时，需要将支付时间传入.</param>
        /// <param name="orderType">订单类型，新接入商户统一传入SERVICE_ORDER(服务订单).</param>
        /// <param name="outBizNo">外部订单号 out_biz_no唯一对应一笔订单，相同的订单需传入相同的out_biz_no.</param>
        /// <param name="partnerId">交易对应的签约商户userId 注意：该字段自2020-02-16日起，可以不传入.</param>
        /// <param name="payAmount">支付金额，单位为【元】，需要实际支付的金额。SERVICE_ORDER且不涉及金额可不传入该字段，其他场景必传.</param>
        /// <param name="payTimeoutExpress">支付超时时间，超过时间支付宝自行关闭订单.</param>
        /// <param name="recordId">商户订单同步记录id.</param>
        /// <param name="sellerId">卖家userId 注意：该字段自2020-02-16日起，可以不传入.</param>
        /// <param name="sendMsg">是否需要小程序订单代理发送模版消息，Y代表需要发送，N代表不需要发送，不传默认不发送.</param>
        /// <param name="serviceCode">服务code：传入小程序后台提报的服务id，将订单与服务关联，有利于提高服务曝光机会；入参服务id的类目须与订单类型相符，若不相符将会报错；如订单类型为“外卖”，则入参的服务ID所对应的服务类目也必须得是”外卖“；service_code 通过 alipay.open.app.service.apply，(服务提报申请)接口创建服务后获取。.</param>
        /// <param name="shopInfo">shopInfo.</param>
        /// <param name="sourceApp">用于区分用户下单的订单来源，如 Alipay-支付宝端内（默认） DingTalk-钉钉小程序.</param>
        /// <param name="syncContent">同步内容 -JOURNEY_ONLY 仅行程信息 -ALL 全部(默认).</param>
        /// <param name="ticketInfo">ticketInfo.</param>
        /// <param name="ticketOrderList">凭证信息.</param>
        /// <param name="tradeNo">订单所对应的支付宝交易号.</param>
        /// <param name="tradeType">交易号类型 1. TRADE-交易，为空默认为TRADE 2. TRANSFER-转账 3. ENTRUST-受托.</param>
        public AlipayMerchantOrderSyncModel(string amount = default(string), string buyerId = default(string), UserInfomation buyerInfo = default(UserInfomation), string buyerOpenId = default(string), string categoryId = default(string), string discountAmount = default(string), List<DiscountInfoData> discountInfoList = default(List<DiscountInfoData>), List<OrderExtInfo> extInfo = default(List<OrderExtInfo>), List<ItemOrderInfo> itemOrderList = default(List<ItemOrderInfo>), List<OrderJourneyInfo> journeyOrderList = default(List<OrderJourneyInfo>), List<OrderLogisticsInformationRequest> logisticsInfoList = default(List<OrderLogisticsInformationRequest>), string orderAuthCode = default(string), string orderCreateTime = default(string), string orderModifiedTime = default(string), string orderPayTime = default(string), string orderType = default(string), string outBizNo = default(string), string partnerId = default(string), string payAmount = default(string), string payTimeoutExpress = default(string), string recordId = default(string), string sellerId = default(string), string sendMsg = default(string), string serviceCode = default(string), OrderShopInfo shopInfo = default(OrderShopInfo), string sourceApp = default(string), string syncContent = default(string), TicketInfo ticketInfo = default(TicketInfo), List<TicketOrderInfo> ticketOrderList = default(List<TicketOrderInfo>), string tradeNo = default(string), string tradeType = default(string))
        {
            this.Amount = amount;
            this.BuyerId = buyerId;
            this.BuyerInfo = buyerInfo;
            this.BuyerOpenId = buyerOpenId;
            this.CategoryId = categoryId;
            this.DiscountAmount = discountAmount;
            this.DiscountInfoList = discountInfoList;
            this.ExtInfo = extInfo;
            this.ItemOrderList = itemOrderList;
            this.JourneyOrderList = journeyOrderList;
            this.LogisticsInfoList = logisticsInfoList;
            this.OrderAuthCode = orderAuthCode;
            this.OrderCreateTime = orderCreateTime;
            this.OrderModifiedTime = orderModifiedTime;
            this.OrderPayTime = orderPayTime;
            this.OrderType = orderType;
            this.OutBizNo = outBizNo;
            this.PartnerId = partnerId;
            this.PayAmount = payAmount;
            this.PayTimeoutExpress = payTimeoutExpress;
            this.RecordId = recordId;
            this.SellerId = sellerId;
            this.SendMsg = sendMsg;
            this.ServiceCode = serviceCode;
            this.ShopInfo = shopInfo;
            this.SourceApp = sourceApp;
            this.SyncContent = syncContent;
            this.TicketInfo = ticketInfo;
            this.TicketOrderList = ticketOrderList;
            this.TradeNo = tradeNo;
            this.TradeType = tradeType;
        }

        /// <summary>
        /// 订单金额，单位为【元】。SERVICE_ORDER且不涉及金额可不传入该字段，其他场景必传
        /// </summary>
        /// <value>订单金额，单位为【元】。SERVICE_ORDER且不涉及金额可不传入该字段，其他场景必传</value>
        [DataMember(Name = "amount", EmitDefaultValue = false)]
        public string Amount { get; set; }

        /// <summary>
        /// 买家userId
        /// </summary>
        /// <value>买家userId</value>
        [DataMember(Name = "buyer_id", EmitDefaultValue = false)]
        public string BuyerId { get; set; }

        /// <summary>
        /// Gets or Sets BuyerInfo
        /// </summary>
        [DataMember(Name = "buyer_info", EmitDefaultValue = false)]
        public UserInfomation BuyerInfo { get; set; }

        /// <summary>
        /// OpenId是用户（buyer_id）在应用（AppId）下的唯一用户标识.
        /// </summary>
        /// <value>OpenId是用户（buyer_id）在应用（AppId）下的唯一用户标识.</value>
        [DataMember(Name = "buyer_open_id", EmitDefaultValue = false)]
        public string BuyerOpenId { get; set; }

        /// <summary>
        /// 标准服务类目
        /// </summary>
        /// <value>标准服务类目</value>
        [DataMember(Name = "category_id", EmitDefaultValue = false)]
        public string CategoryId { get; set; }

        /// <summary>
        /// 优惠金额，单位为【元】
        /// </summary>
        /// <value>优惠金额，单位为【元】</value>
        [DataMember(Name = "discount_amount", EmitDefaultValue = false)]
        public string DiscountAmount { get; set; }

        /// <summary>
        /// 订单优惠信息
        /// </summary>
        /// <value>订单优惠信息</value>
        [DataMember(Name = "discount_info_list", EmitDefaultValue = false)]
        public List<DiscountInfoData> DiscountInfoList { get; set; }

        /// <summary>
        /// 扩展信息，请参见 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/introduce/ordercenter\&quot;&gt;小程序订单中心&lt;/a&gt;；&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/00nnt3\&quot;&gt;扫码点餐&lt;/a&gt;产品文档。
        /// </summary>
        /// <value>扩展信息，请参见 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/introduce/ordercenter\&quot;&gt;小程序订单中心&lt;/a&gt;；&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/00nnt3\&quot;&gt;扫码点餐&lt;/a&gt;产品文档。</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public List<OrderExtInfo> ExtInfo { get; set; }

        /// <summary>
        /// 商品信息列表
        /// </summary>
        /// <value>商品信息列表</value>
        [DataMember(Name = "item_order_list", EmitDefaultValue = false)]
        public List<ItemOrderInfo> ItemOrderList { get; set; }

        /// <summary>
        /// 行程信息
        /// </summary>
        /// <value>行程信息</value>
        [DataMember(Name = "journey_order_list", EmitDefaultValue = false)]
        public List<OrderJourneyInfo> JourneyOrderList { get; set; }

        /// <summary>
        /// 物流信息  列表最多支持物流信息个数，请参考产品文档  注：若该值不为空，且物流信息同步至我的快递，则在查询订单时可返回具体物流信息
        /// </summary>
        /// <value>物流信息  列表最多支持物流信息个数，请参考产品文档  注：若该值不为空，且物流信息同步至我的快递，则在查询订单时可返回具体物流信息</value>
        [DataMember(Name = "logistics_info_list", EmitDefaultValue = false)]
        public List<OrderLogisticsInformationRequest> LogisticsInfoList { get; set; }

        /// <summary>
        /// 本字段已废弃，无需填写！
        /// </summary>
        /// <value>本字段已废弃，无需填写！</value>
        [DataMember(Name = "order_auth_code", EmitDefaultValue = false)]
        public string OrderAuthCode { get; set; }

        /// <summary>
        /// 订单创建时间 当order_type为SERVICE_ORDER时必传
        /// </summary>
        /// <value>订单创建时间 当order_type为SERVICE_ORDER时必传</value>
        [DataMember(Name = "order_create_time", EmitDefaultValue = false)]
        public string OrderCreateTime { get; set; }

        /// <summary>
        /// 订单修改时间。用于订单状态或数据变化较快的顺序控制，SERVICE_ORDER按照行业标准化接入场景必须传入该字段控制乱序。order_modified_time较晚的同步会被最终存储，order_modified_time相同的两次同步会被幂等处理
        /// </summary>
        /// <value>订单修改时间。用于订单状态或数据变化较快的顺序控制，SERVICE_ORDER按照行业标准化接入场景必须传入该字段控制乱序。order_modified_time较晚的同步会被最终存储，order_modified_time相同的两次同步会被幂等处理</value>
        [DataMember(Name = "order_modified_time", EmitDefaultValue = false)]
        public string OrderModifiedTime { get; set; }

        /// <summary>
        /// 订单支付时间 当pay_channel为非ALIPAY时，且订单状态已流转到“支付”或支付后时，需要将支付时间传入
        /// </summary>
        /// <value>订单支付时间 当pay_channel为非ALIPAY时，且订单状态已流转到“支付”或支付后时，需要将支付时间传入</value>
        [DataMember(Name = "order_pay_time", EmitDefaultValue = false)]
        public string OrderPayTime { get; set; }

        /// <summary>
        /// 订单类型，新接入商户统一传入SERVICE_ORDER(服务订单)
        /// </summary>
        /// <value>订单类型，新接入商户统一传入SERVICE_ORDER(服务订单)</value>
        [DataMember(Name = "order_type", EmitDefaultValue = false)]
        public string OrderType { get; set; }

        /// <summary>
        /// 外部订单号 out_biz_no唯一对应一笔订单，相同的订单需传入相同的out_biz_no
        /// </summary>
        /// <value>外部订单号 out_biz_no唯一对应一笔订单，相同的订单需传入相同的out_biz_no</value>
        [DataMember(Name = "out_biz_no", EmitDefaultValue = false)]
        public string OutBizNo { get; set; }

        /// <summary>
        /// 交易对应的签约商户userId 注意：该字段自2020-02-16日起，可以不传入
        /// </summary>
        /// <value>交易对应的签约商户userId 注意：该字段自2020-02-16日起，可以不传入</value>
        [DataMember(Name = "partner_id", EmitDefaultValue = false)]
        public string PartnerId { get; set; }

        /// <summary>
        /// 支付金额，单位为【元】，需要实际支付的金额。SERVICE_ORDER且不涉及金额可不传入该字段，其他场景必传
        /// </summary>
        /// <value>支付金额，单位为【元】，需要实际支付的金额。SERVICE_ORDER且不涉及金额可不传入该字段，其他场景必传</value>
        [DataMember(Name = "pay_amount", EmitDefaultValue = false)]
        public string PayAmount { get; set; }

        /// <summary>
        /// 支付超时时间，超过时间支付宝自行关闭订单
        /// </summary>
        /// <value>支付超时时间，超过时间支付宝自行关闭订单</value>
        [DataMember(Name = "pay_timeout_express", EmitDefaultValue = false)]
        public string PayTimeoutExpress { get; set; }

        /// <summary>
        /// 商户订单同步记录id
        /// </summary>
        /// <value>商户订单同步记录id</value>
        [DataMember(Name = "record_id", EmitDefaultValue = false)]
        public string RecordId { get; set; }

        /// <summary>
        /// 卖家userId 注意：该字段自2020-02-16日起，可以不传入
        /// </summary>
        /// <value>卖家userId 注意：该字段自2020-02-16日起，可以不传入</value>
        [DataMember(Name = "seller_id", EmitDefaultValue = false)]
        public string SellerId { get; set; }

        /// <summary>
        /// 是否需要小程序订单代理发送模版消息，Y代表需要发送，N代表不需要发送，不传默认不发送
        /// </summary>
        /// <value>是否需要小程序订单代理发送模版消息，Y代表需要发送，N代表不需要发送，不传默认不发送</value>
        [DataMember(Name = "send_msg", EmitDefaultValue = false)]
        public string SendMsg { get; set; }

        /// <summary>
        /// 服务code：传入小程序后台提报的服务id，将订单与服务关联，有利于提高服务曝光机会；入参服务id的类目须与订单类型相符，若不相符将会报错；如订单类型为“外卖”，则入参的服务ID所对应的服务类目也必须得是”外卖“；service_code 通过 alipay.open.app.service.apply，(服务提报申请)接口创建服务后获取。
        /// </summary>
        /// <value>服务code：传入小程序后台提报的服务id，将订单与服务关联，有利于提高服务曝光机会；入参服务id的类目须与订单类型相符，若不相符将会报错；如订单类型为“外卖”，则入参的服务ID所对应的服务类目也必须得是”外卖“；service_code 通过 alipay.open.app.service.apply，(服务提报申请)接口创建服务后获取。</value>
        [DataMember(Name = "service_code", EmitDefaultValue = false)]
        public string ServiceCode { get; set; }

        /// <summary>
        /// Gets or Sets ShopInfo
        /// </summary>
        [DataMember(Name = "shop_info", EmitDefaultValue = false)]
        public OrderShopInfo ShopInfo { get; set; }

        /// <summary>
        /// 用于区分用户下单的订单来源，如 Alipay-支付宝端内（默认） DingTalk-钉钉小程序
        /// </summary>
        /// <value>用于区分用户下单的订单来源，如 Alipay-支付宝端内（默认） DingTalk-钉钉小程序</value>
        [DataMember(Name = "source_app", EmitDefaultValue = false)]
        public string SourceApp { get; set; }

        /// <summary>
        /// 同步内容 -JOURNEY_ONLY 仅行程信息 -ALL 全部(默认)
        /// </summary>
        /// <value>同步内容 -JOURNEY_ONLY 仅行程信息 -ALL 全部(默认)</value>
        [DataMember(Name = "sync_content", EmitDefaultValue = false)]
        public string SyncContent { get; set; }

        /// <summary>
        /// Gets or Sets TicketInfo
        /// </summary>
        [DataMember(Name = "ticket_info", EmitDefaultValue = false)]
        public TicketInfo TicketInfo { get; set; }

        /// <summary>
        /// 凭证信息
        /// </summary>
        /// <value>凭证信息</value>
        [DataMember(Name = "ticket_order_list", EmitDefaultValue = false)]
        public List<TicketOrderInfo> TicketOrderList { get; set; }

        /// <summary>
        /// 订单所对应的支付宝交易号
        /// </summary>
        /// <value>订单所对应的支付宝交易号</value>
        [DataMember(Name = "trade_no", EmitDefaultValue = false)]
        public string TradeNo { get; set; }

        /// <summary>
        /// 交易号类型 1. TRADE-交易，为空默认为TRADE 2. TRANSFER-转账 3. ENTRUST-受托
        /// </summary>
        /// <value>交易号类型 1. TRADE-交易，为空默认为TRADE 2. TRANSFER-转账 3. ENTRUST-受托</value>
        [DataMember(Name = "trade_type", EmitDefaultValue = false)]
        public string TradeType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayMerchantOrderSyncModel {\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  BuyerId: ").Append(BuyerId).Append("\n");
            sb.Append("  BuyerInfo: ").Append(BuyerInfo).Append("\n");
            sb.Append("  BuyerOpenId: ").Append(BuyerOpenId).Append("\n");
            sb.Append("  CategoryId: ").Append(CategoryId).Append("\n");
            sb.Append("  DiscountAmount: ").Append(DiscountAmount).Append("\n");
            sb.Append("  DiscountInfoList: ").Append(DiscountInfoList).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  ItemOrderList: ").Append(ItemOrderList).Append("\n");
            sb.Append("  JourneyOrderList: ").Append(JourneyOrderList).Append("\n");
            sb.Append("  LogisticsInfoList: ").Append(LogisticsInfoList).Append("\n");
            sb.Append("  OrderAuthCode: ").Append(OrderAuthCode).Append("\n");
            sb.Append("  OrderCreateTime: ").Append(OrderCreateTime).Append("\n");
            sb.Append("  OrderModifiedTime: ").Append(OrderModifiedTime).Append("\n");
            sb.Append("  OrderPayTime: ").Append(OrderPayTime).Append("\n");
            sb.Append("  OrderType: ").Append(OrderType).Append("\n");
            sb.Append("  OutBizNo: ").Append(OutBizNo).Append("\n");
            sb.Append("  PartnerId: ").Append(PartnerId).Append("\n");
            sb.Append("  PayAmount: ").Append(PayAmount).Append("\n");
            sb.Append("  PayTimeoutExpress: ").Append(PayTimeoutExpress).Append("\n");
            sb.Append("  RecordId: ").Append(RecordId).Append("\n");
            sb.Append("  SellerId: ").Append(SellerId).Append("\n");
            sb.Append("  SendMsg: ").Append(SendMsg).Append("\n");
            sb.Append("  ServiceCode: ").Append(ServiceCode).Append("\n");
            sb.Append("  ShopInfo: ").Append(ShopInfo).Append("\n");
            sb.Append("  SourceApp: ").Append(SourceApp).Append("\n");
            sb.Append("  SyncContent: ").Append(SyncContent).Append("\n");
            sb.Append("  TicketInfo: ").Append(TicketInfo).Append("\n");
            sb.Append("  TicketOrderList: ").Append(TicketOrderList).Append("\n");
            sb.Append("  TradeNo: ").Append(TradeNo).Append("\n");
            sb.Append("  TradeType: ").Append(TradeType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlipayMerchantOrderSyncModel);
        }

        /// <summary>
        /// Returns true if AlipayMerchantOrderSyncModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AlipayMerchantOrderSyncModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlipayMerchantOrderSyncModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.BuyerId == input.BuyerId ||
                    (this.BuyerId != null &&
                    this.BuyerId.Equals(input.BuyerId))
                ) && 
                (
                    this.BuyerInfo == input.BuyerInfo ||
                    (this.BuyerInfo != null &&
                    this.BuyerInfo.Equals(input.BuyerInfo))
                ) && 
                (
                    this.BuyerOpenId == input.BuyerOpenId ||
                    (this.BuyerOpenId != null &&
                    this.BuyerOpenId.Equals(input.BuyerOpenId))
                ) && 
                (
                    this.CategoryId == input.CategoryId ||
                    (this.CategoryId != null &&
                    this.CategoryId.Equals(input.CategoryId))
                ) && 
                (
                    this.DiscountAmount == input.DiscountAmount ||
                    (this.DiscountAmount != null &&
                    this.DiscountAmount.Equals(input.DiscountAmount))
                ) && 
                (
                    this.DiscountInfoList == input.DiscountInfoList ||
                    this.DiscountInfoList != null &&
                    input.DiscountInfoList != null &&
                    this.DiscountInfoList.SequenceEqual(input.DiscountInfoList)
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    this.ExtInfo != null &&
                    input.ExtInfo != null &&
                    this.ExtInfo.SequenceEqual(input.ExtInfo)
                ) && 
                (
                    this.ItemOrderList == input.ItemOrderList ||
                    this.ItemOrderList != null &&
                    input.ItemOrderList != null &&
                    this.ItemOrderList.SequenceEqual(input.ItemOrderList)
                ) && 
                (
                    this.JourneyOrderList == input.JourneyOrderList ||
                    this.JourneyOrderList != null &&
                    input.JourneyOrderList != null &&
                    this.JourneyOrderList.SequenceEqual(input.JourneyOrderList)
                ) && 
                (
                    this.LogisticsInfoList == input.LogisticsInfoList ||
                    this.LogisticsInfoList != null &&
                    input.LogisticsInfoList != null &&
                    this.LogisticsInfoList.SequenceEqual(input.LogisticsInfoList)
                ) && 
                (
                    this.OrderAuthCode == input.OrderAuthCode ||
                    (this.OrderAuthCode != null &&
                    this.OrderAuthCode.Equals(input.OrderAuthCode))
                ) && 
                (
                    this.OrderCreateTime == input.OrderCreateTime ||
                    (this.OrderCreateTime != null &&
                    this.OrderCreateTime.Equals(input.OrderCreateTime))
                ) && 
                (
                    this.OrderModifiedTime == input.OrderModifiedTime ||
                    (this.OrderModifiedTime != null &&
                    this.OrderModifiedTime.Equals(input.OrderModifiedTime))
                ) && 
                (
                    this.OrderPayTime == input.OrderPayTime ||
                    (this.OrderPayTime != null &&
                    this.OrderPayTime.Equals(input.OrderPayTime))
                ) && 
                (
                    this.OrderType == input.OrderType ||
                    (this.OrderType != null &&
                    this.OrderType.Equals(input.OrderType))
                ) && 
                (
                    this.OutBizNo == input.OutBizNo ||
                    (this.OutBizNo != null &&
                    this.OutBizNo.Equals(input.OutBizNo))
                ) && 
                (
                    this.PartnerId == input.PartnerId ||
                    (this.PartnerId != null &&
                    this.PartnerId.Equals(input.PartnerId))
                ) && 
                (
                    this.PayAmount == input.PayAmount ||
                    (this.PayAmount != null &&
                    this.PayAmount.Equals(input.PayAmount))
                ) && 
                (
                    this.PayTimeoutExpress == input.PayTimeoutExpress ||
                    (this.PayTimeoutExpress != null &&
                    this.PayTimeoutExpress.Equals(input.PayTimeoutExpress))
                ) && 
                (
                    this.RecordId == input.RecordId ||
                    (this.RecordId != null &&
                    this.RecordId.Equals(input.RecordId))
                ) && 
                (
                    this.SellerId == input.SellerId ||
                    (this.SellerId != null &&
                    this.SellerId.Equals(input.SellerId))
                ) && 
                (
                    this.SendMsg == input.SendMsg ||
                    (this.SendMsg != null &&
                    this.SendMsg.Equals(input.SendMsg))
                ) && 
                (
                    this.ServiceCode == input.ServiceCode ||
                    (this.ServiceCode != null &&
                    this.ServiceCode.Equals(input.ServiceCode))
                ) && 
                (
                    this.ShopInfo == input.ShopInfo ||
                    (this.ShopInfo != null &&
                    this.ShopInfo.Equals(input.ShopInfo))
                ) && 
                (
                    this.SourceApp == input.SourceApp ||
                    (this.SourceApp != null &&
                    this.SourceApp.Equals(input.SourceApp))
                ) && 
                (
                    this.SyncContent == input.SyncContent ||
                    (this.SyncContent != null &&
                    this.SyncContent.Equals(input.SyncContent))
                ) && 
                (
                    this.TicketInfo == input.TicketInfo ||
                    (this.TicketInfo != null &&
                    this.TicketInfo.Equals(input.TicketInfo))
                ) && 
                (
                    this.TicketOrderList == input.TicketOrderList ||
                    this.TicketOrderList != null &&
                    input.TicketOrderList != null &&
                    this.TicketOrderList.SequenceEqual(input.TicketOrderList)
                ) && 
                (
                    this.TradeNo == input.TradeNo ||
                    (this.TradeNo != null &&
                    this.TradeNo.Equals(input.TradeNo))
                ) && 
                (
                    this.TradeType == input.TradeType ||
                    (this.TradeType != null &&
                    this.TradeType.Equals(input.TradeType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Amount != null)
                {
                    hashCode = (hashCode * 59) + this.Amount.GetHashCode();
                }
                if (this.BuyerId != null)
                {
                    hashCode = (hashCode * 59) + this.BuyerId.GetHashCode();
                }
                if (this.BuyerInfo != null)
                {
                    hashCode = (hashCode * 59) + this.BuyerInfo.GetHashCode();
                }
                if (this.BuyerOpenId != null)
                {
                    hashCode = (hashCode * 59) + this.BuyerOpenId.GetHashCode();
                }
                if (this.CategoryId != null)
                {
                    hashCode = (hashCode * 59) + this.CategoryId.GetHashCode();
                }
                if (this.DiscountAmount != null)
                {
                    hashCode = (hashCode * 59) + this.DiscountAmount.GetHashCode();
                }
                if (this.DiscountInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.DiscountInfoList.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.ItemOrderList != null)
                {
                    hashCode = (hashCode * 59) + this.ItemOrderList.GetHashCode();
                }
                if (this.JourneyOrderList != null)
                {
                    hashCode = (hashCode * 59) + this.JourneyOrderList.GetHashCode();
                }
                if (this.LogisticsInfoList != null)
                {
                    hashCode = (hashCode * 59) + this.LogisticsInfoList.GetHashCode();
                }
                if (this.OrderAuthCode != null)
                {
                    hashCode = (hashCode * 59) + this.OrderAuthCode.GetHashCode();
                }
                if (this.OrderCreateTime != null)
                {
                    hashCode = (hashCode * 59) + this.OrderCreateTime.GetHashCode();
                }
                if (this.OrderModifiedTime != null)
                {
                    hashCode = (hashCode * 59) + this.OrderModifiedTime.GetHashCode();
                }
                if (this.OrderPayTime != null)
                {
                    hashCode = (hashCode * 59) + this.OrderPayTime.GetHashCode();
                }
                if (this.OrderType != null)
                {
                    hashCode = (hashCode * 59) + this.OrderType.GetHashCode();
                }
                if (this.OutBizNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutBizNo.GetHashCode();
                }
                if (this.PartnerId != null)
                {
                    hashCode = (hashCode * 59) + this.PartnerId.GetHashCode();
                }
                if (this.PayAmount != null)
                {
                    hashCode = (hashCode * 59) + this.PayAmount.GetHashCode();
                }
                if (this.PayTimeoutExpress != null)
                {
                    hashCode = (hashCode * 59) + this.PayTimeoutExpress.GetHashCode();
                }
                if (this.RecordId != null)
                {
                    hashCode = (hashCode * 59) + this.RecordId.GetHashCode();
                }
                if (this.SellerId != null)
                {
                    hashCode = (hashCode * 59) + this.SellerId.GetHashCode();
                }
                if (this.SendMsg != null)
                {
                    hashCode = (hashCode * 59) + this.SendMsg.GetHashCode();
                }
                if (this.ServiceCode != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceCode.GetHashCode();
                }
                if (this.ShopInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ShopInfo.GetHashCode();
                }
                if (this.SourceApp != null)
                {
                    hashCode = (hashCode * 59) + this.SourceApp.GetHashCode();
                }
                if (this.SyncContent != null)
                {
                    hashCode = (hashCode * 59) + this.SyncContent.GetHashCode();
                }
                if (this.TicketInfo != null)
                {
                    hashCode = (hashCode * 59) + this.TicketInfo.GetHashCode();
                }
                if (this.TicketOrderList != null)
                {
                    hashCode = (hashCode * 59) + this.TicketOrderList.GetHashCode();
                }
                if (this.TradeNo != null)
                {
                    hashCode = (hashCode * 59) + this.TradeNo.GetHashCode();
                }
                if (this.TradeType != null)
                {
                    hashCode = (hashCode * 59) + this.TradeType.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
