/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-10-25
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// KoubeiMarketingCampaignItemMerchantactivityModifyModel
    /// </summary>
    [DataContract(Name = "KoubeiMarketingCampaignItemMerchantactivityModifyModel")]
    public partial class KoubeiMarketingCampaignItemMerchantactivityModifyModel : IEquatable<KoubeiMarketingCampaignItemMerchantactivityModifyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KoubeiMarketingCampaignItemMerchantactivityModifyModel" /> class.
        /// </summary>
        /// <param name="activityId">活动Id.</param>
        /// <param name="externalCallbackUrl">外部回调地址.</param>
        /// <param name="gmtEnd">活动结束日期，只可以延长  格式要求为：yyyy-MM-dd HH:mm:ss.</param>
        /// <param name="itemIds">活动商品列表，只可以增加.</param>
        /// <param name="memo">备注.</param>
        /// <param name="voucherInfo">voucherInfo.</param>
        public KoubeiMarketingCampaignItemMerchantactivityModifyModel(string activityId = default(string), string externalCallbackUrl = default(string), string gmtEnd = default(string), List<string> itemIds = default(List<string>), string memo = default(string), MerchantActivityModifyVoucherInfo voucherInfo = default(MerchantActivityModifyVoucherInfo))
        {
            this.ActivityId = activityId;
            this.ExternalCallbackUrl = externalCallbackUrl;
            this.GmtEnd = gmtEnd;
            this.ItemIds = itemIds;
            this.Memo = memo;
            this.VoucherInfo = voucherInfo;
        }

        /// <summary>
        /// 活动Id
        /// </summary>
        /// <value>活动Id</value>
        [DataMember(Name = "activity_id", EmitDefaultValue = false)]
        public string ActivityId { get; set; }

        /// <summary>
        /// 外部回调地址
        /// </summary>
        /// <value>外部回调地址</value>
        [DataMember(Name = "external_callback_url", EmitDefaultValue = false)]
        public string ExternalCallbackUrl { get; set; }

        /// <summary>
        /// 活动结束日期，只可以延长  格式要求为：yyyy-MM-dd HH:mm:ss
        /// </summary>
        /// <value>活动结束日期，只可以延长  格式要求为：yyyy-MM-dd HH:mm:ss</value>
        [DataMember(Name = "gmt_end", EmitDefaultValue = false)]
        public string GmtEnd { get; set; }

        /// <summary>
        /// 活动商品列表，只可以增加
        /// </summary>
        /// <value>活动商品列表，只可以增加</value>
        [DataMember(Name = "item_ids", EmitDefaultValue = false)]
        public List<string> ItemIds { get; set; }

        /// <summary>
        /// 备注
        /// </summary>
        /// <value>备注</value>
        [DataMember(Name = "memo", EmitDefaultValue = false)]
        public string Memo { get; set; }

        /// <summary>
        /// Gets or Sets VoucherInfo
        /// </summary>
        [DataMember(Name = "voucher_info", EmitDefaultValue = false)]
        public MerchantActivityModifyVoucherInfo VoucherInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KoubeiMarketingCampaignItemMerchantactivityModifyModel {\n");
            sb.Append("  ActivityId: ").Append(ActivityId).Append("\n");
            sb.Append("  ExternalCallbackUrl: ").Append(ExternalCallbackUrl).Append("\n");
            sb.Append("  GmtEnd: ").Append(GmtEnd).Append("\n");
            sb.Append("  ItemIds: ").Append(ItemIds).Append("\n");
            sb.Append("  Memo: ").Append(Memo).Append("\n");
            sb.Append("  VoucherInfo: ").Append(VoucherInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KoubeiMarketingCampaignItemMerchantactivityModifyModel);
        }

        /// <summary>
        /// Returns true if KoubeiMarketingCampaignItemMerchantactivityModifyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of KoubeiMarketingCampaignItemMerchantactivityModifyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KoubeiMarketingCampaignItemMerchantactivityModifyModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ActivityId == input.ActivityId ||
                    (this.ActivityId != null &&
                    this.ActivityId.Equals(input.ActivityId))
                ) && 
                (
                    this.ExternalCallbackUrl == input.ExternalCallbackUrl ||
                    (this.ExternalCallbackUrl != null &&
                    this.ExternalCallbackUrl.Equals(input.ExternalCallbackUrl))
                ) && 
                (
                    this.GmtEnd == input.GmtEnd ||
                    (this.GmtEnd != null &&
                    this.GmtEnd.Equals(input.GmtEnd))
                ) && 
                (
                    this.ItemIds == input.ItemIds ||
                    this.ItemIds != null &&
                    input.ItemIds != null &&
                    this.ItemIds.SequenceEqual(input.ItemIds)
                ) && 
                (
                    this.Memo == input.Memo ||
                    (this.Memo != null &&
                    this.Memo.Equals(input.Memo))
                ) && 
                (
                    this.VoucherInfo == input.VoucherInfo ||
                    (this.VoucherInfo != null &&
                    this.VoucherInfo.Equals(input.VoucherInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActivityId != null)
                {
                    hashCode = (hashCode * 59) + this.ActivityId.GetHashCode();
                }
                if (this.ExternalCallbackUrl != null)
                {
                    hashCode = (hashCode * 59) + this.ExternalCallbackUrl.GetHashCode();
                }
                if (this.GmtEnd != null)
                {
                    hashCode = (hashCode * 59) + this.GmtEnd.GetHashCode();
                }
                if (this.ItemIds != null)
                {
                    hashCode = (hashCode * 59) + this.ItemIds.GetHashCode();
                }
                if (this.Memo != null)
                {
                    hashCode = (hashCode * 59) + this.Memo.GetHashCode();
                }
                if (this.VoucherInfo != null)
                {
                    hashCode = (hashCode * 59) + this.VoucherInfo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
