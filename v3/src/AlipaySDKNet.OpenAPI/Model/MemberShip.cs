/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-04-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// MemberShip
    /// </summary>
    [DataContract(Name = "MemberShip")]
    public partial class MemberShip : IEquatable<MemberShip>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MemberShip" /> class.
        /// </summary>
        /// <param name="bankCardNo">银行卡号.</param>
        /// <param name="certNo">会员二代身份证号码.</param>
        /// <param name="email">邮箱号码.</param>
        /// <param name="mac">MAC地址.</param>
        /// <param name="mobilePhoneNo">11位手机号码.</param>
        public MemberShip(string bankCardNo = default(string), string certNo = default(string), string email = default(string), string mac = default(string), string mobilePhoneNo = default(string))
        {
            this.BankCardNo = bankCardNo;
            this.CertNo = certNo;
            this.Email = email;
            this.Mac = mac;
            this.MobilePhoneNo = mobilePhoneNo;
        }

        /// <summary>
        /// 银行卡号
        /// </summary>
        /// <value>银行卡号</value>
        [DataMember(Name = "bank_card_no", EmitDefaultValue = false)]
        public string BankCardNo { get; set; }

        /// <summary>
        /// 会员二代身份证号码
        /// </summary>
        /// <value>会员二代身份证号码</value>
        [DataMember(Name = "cert_no", EmitDefaultValue = false)]
        public string CertNo { get; set; }

        /// <summary>
        /// 邮箱号码
        /// </summary>
        /// <value>邮箱号码</value>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// MAC地址
        /// </summary>
        /// <value>MAC地址</value>
        [DataMember(Name = "mac", EmitDefaultValue = false)]
        public string Mac { get; set; }

        /// <summary>
        /// 11位手机号码
        /// </summary>
        /// <value>11位手机号码</value>
        [DataMember(Name = "mobile_phone_no", EmitDefaultValue = false)]
        public string MobilePhoneNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MemberShip {\n");
            sb.Append("  BankCardNo: ").Append(BankCardNo).Append("\n");
            sb.Append("  CertNo: ").Append(CertNo).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Mac: ").Append(Mac).Append("\n");
            sb.Append("  MobilePhoneNo: ").Append(MobilePhoneNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MemberShip);
        }

        /// <summary>
        /// Returns true if MemberShip instances are equal
        /// </summary>
        /// <param name="input">Instance of MemberShip to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MemberShip input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BankCardNo == input.BankCardNo ||
                    (this.BankCardNo != null &&
                    this.BankCardNo.Equals(input.BankCardNo))
                ) && 
                (
                    this.CertNo == input.CertNo ||
                    (this.CertNo != null &&
                    this.CertNo.Equals(input.CertNo))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Mac == input.Mac ||
                    (this.Mac != null &&
                    this.Mac.Equals(input.Mac))
                ) && 
                (
                    this.MobilePhoneNo == input.MobilePhoneNo ||
                    (this.MobilePhoneNo != null &&
                    this.MobilePhoneNo.Equals(input.MobilePhoneNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BankCardNo != null)
                {
                    hashCode = (hashCode * 59) + this.BankCardNo.GetHashCode();
                }
                if (this.CertNo != null)
                {
                    hashCode = (hashCode * 59) + this.CertNo.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.Mac != null)
                {
                    hashCode = (hashCode * 59) + this.Mac.GetHashCode();
                }
                if (this.MobilePhoneNo != null)
                {
                    hashCode = (hashCode * 59) + this.MobilePhoneNo.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
