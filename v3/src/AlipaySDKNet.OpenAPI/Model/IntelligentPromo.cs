/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-04-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// IntelligentPromo
    /// </summary>
    [DataContract(Name = "IntelligentPromo")]
    public partial class IntelligentPromo : IEquatable<IntelligentPromo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentPromo" /> class.
        /// </summary>
        /// <param name="allowAutoDelay">是否允许自动续期.</param>
        /// <param name="auditStatus">审批状态。APPROVING：审批中；REJECTED：已驳回；PASS：已通过；（注意：修改接口无需传递审批状态）.</param>
        /// <param name="createRequestNo">请求幂等控制请求参数，该参数尽量比较复杂，建议使用uuid，否则触发幂等返回。.</param>
        /// <param name="creatorInfo">creatorInfo.</param>
        /// <param name="desc">智能活动描述.</param>
        /// <param name="extInfo">活动扩展信息，通过《koubei.marketing.campaign.intelligent.promo.consult智能方案咨询接口》推荐出的方案扩展信息字段，调用《koubei.marketing.campaign.intelligent.promo.create创建智能方案》接口必须要原路带回，不能删减字段。.</param>
        /// <param name="forecastEffect">forecastEffect.</param>
        /// <param name="gmtClosed">智能营销活动下架的时间.</param>
        /// <param name="gmtEnabled">智能营销活动的生效时间.</param>
        /// <param name="gmtEnd">智能营销活动的结束时间.</param>
        /// <param name="gmtStart">智能营销活动开始时间.</param>
        /// <param name="merchantPromos">智能营销商户子活动列表.</param>
        /// <param name="name">智能营销活动对应的名称.</param>
        /// <param name="ownerInfo">ownerInfo.</param>
        /// <param name="parentPromoId">智能营销方案父id，如果需要续签智能营销活动，则会对于原有智能营销方案的id.</param>
        /// <param name="planId">智能营销活动对应的方案编号.</param>
        /// <param name="promoId">智能营销方案id。《koubei.marketing.campaign.intelligent.promo.create》创建接口中这个参数不必传递，仅在查询接口中返回.</param>
        /// <param name="promos">营销活动详情列表，注意：（该参数20180125开始已不在维护，替代参数详见merchant_promos，如需接入替代参数，接之前先找开发负责人申请appid白名单）.</param>
        /// <param name="status">智能营销活动状态。CREATED：已创建；ENABLED：已生效；CLOSED：已关闭；FINISHED：已完结；DISABLED:已失效（有两种情况会是失效状态，一种是服务商创建方案，商户驳回，一种是服务商创建方案，商户未确认，活动到期。）（注意：修改方案的动作不需要传递方案状态）.</param>
        /// <param name="subPromoIds">该智能营销方案如果续签多次，则会返回该方案对应的所有智能营销子方案的promo_id.</param>
        /// <param name="subStatus">活动展示状态。已创建：CREATED；  REJECTED：创建被驳回；ENABLING：生效中；ONLINE_WAIT_CONFIRM：上架待确认；PUBLISHED：已发布（活动未到开始时间）；ENABLED：已发布已开始；OFFLINE_WAIT_CONFIRM：下架待确认；CLOSING：下架中；CLOSED：已下架（人为干预下架）；FINISHED：已结束（活动到期自然结束）；MODIFYING：修改中；MODIFY_WAIT_CONFIRM：修改待确认；DISABLED：已失效  （注意：修改接口子状态参数不能传递）.</param>
        /// <param name="templateId">智能营销活动对应的方案中的模板编号.</param>
        /// <param name="type">智能活动类型，值如下：RECOMMENDATION：系统推荐；REGISTRATION：报名。在创建时，这个字段需要ISV自己进行决策，在推荐接口会返回优惠力度，比如代金券面额等信息，ISV判断如果优惠力度比这个大或者相同，就用RECOMMENDATION，其他情况用REGISTRATION，如推荐力度大于实际创建传过来的优惠力度，则创建的时候系统会自动将RECOMMENDATION改为REGISTRATION.</param>
        public IntelligentPromo(bool allowAutoDelay = default(bool), string auditStatus = default(string), string createRequestNo = default(string), PromoOperatorInfo creatorInfo = default(PromoOperatorInfo), string desc = default(string), string extInfo = default(string), IntelligentPromoEffect forecastEffect = default(IntelligentPromoEffect), string gmtClosed = default(string), string gmtEnabled = default(string), string gmtEnd = default(string), string gmtStart = default(string), List<InteligentMerchantPromo> merchantPromos = default(List<InteligentMerchantPromo>), string name = default(string), PromoOperatorInfo ownerInfo = default(PromoOperatorInfo), string parentPromoId = default(string), string planId = default(string), string promoId = default(string), List<IntelligentPromoDetail> promos = default(List<IntelligentPromoDetail>), string status = default(string), List<string> subPromoIds = default(List<string>), string subStatus = default(string), string templateId = default(string), string type = default(string))
        {
            this.AllowAutoDelay = allowAutoDelay;
            this.AuditStatus = auditStatus;
            this.CreateRequestNo = createRequestNo;
            this.CreatorInfo = creatorInfo;
            this.Desc = desc;
            this.ExtInfo = extInfo;
            this.ForecastEffect = forecastEffect;
            this.GmtClosed = gmtClosed;
            this.GmtEnabled = gmtEnabled;
            this.GmtEnd = gmtEnd;
            this.GmtStart = gmtStart;
            this.MerchantPromos = merchantPromos;
            this.Name = name;
            this.OwnerInfo = ownerInfo;
            this.ParentPromoId = parentPromoId;
            this.PlanId = planId;
            this.PromoId = promoId;
            this.Promos = promos;
            this.Status = status;
            this.SubPromoIds = subPromoIds;
            this.SubStatus = subStatus;
            this.TemplateId = templateId;
            this.Type = type;
        }

        /// <summary>
        /// 是否允许自动续期
        /// </summary>
        /// <value>是否允许自动续期</value>
        [DataMember(Name = "allow_auto_delay", EmitDefaultValue = true)]
        public bool AllowAutoDelay { get; set; }

        /// <summary>
        /// 审批状态。APPROVING：审批中；REJECTED：已驳回；PASS：已通过；（注意：修改接口无需传递审批状态）
        /// </summary>
        /// <value>审批状态。APPROVING：审批中；REJECTED：已驳回；PASS：已通过；（注意：修改接口无需传递审批状态）</value>
        [DataMember(Name = "audit_status", EmitDefaultValue = false)]
        public string AuditStatus { get; set; }

        /// <summary>
        /// 请求幂等控制请求参数，该参数尽量比较复杂，建议使用uuid，否则触发幂等返回。
        /// </summary>
        /// <value>请求幂等控制请求参数，该参数尽量比较复杂，建议使用uuid，否则触发幂等返回。</value>
        [DataMember(Name = "create_request_no", EmitDefaultValue = false)]
        public string CreateRequestNo { get; set; }

        /// <summary>
        /// Gets or Sets CreatorInfo
        /// </summary>
        [DataMember(Name = "creator_info", EmitDefaultValue = false)]
        public PromoOperatorInfo CreatorInfo { get; set; }

        /// <summary>
        /// 智能活动描述
        /// </summary>
        /// <value>智能活动描述</value>
        [DataMember(Name = "desc", EmitDefaultValue = false)]
        public string Desc { get; set; }

        /// <summary>
        /// 活动扩展信息，通过《koubei.marketing.campaign.intelligent.promo.consult智能方案咨询接口》推荐出的方案扩展信息字段，调用《koubei.marketing.campaign.intelligent.promo.create创建智能方案》接口必须要原路带回，不能删减字段。
        /// </summary>
        /// <value>活动扩展信息，通过《koubei.marketing.campaign.intelligent.promo.consult智能方案咨询接口》推荐出的方案扩展信息字段，调用《koubei.marketing.campaign.intelligent.promo.create创建智能方案》接口必须要原路带回，不能删减字段。</value>
        [DataMember(Name = "ext_info", EmitDefaultValue = false)]
        public string ExtInfo { get; set; }

        /// <summary>
        /// Gets or Sets ForecastEffect
        /// </summary>
        [DataMember(Name = "forecast_effect", EmitDefaultValue = false)]
        public IntelligentPromoEffect ForecastEffect { get; set; }

        /// <summary>
        /// 智能营销活动下架的时间
        /// </summary>
        /// <value>智能营销活动下架的时间</value>
        [DataMember(Name = "gmt_closed", EmitDefaultValue = false)]
        public string GmtClosed { get; set; }

        /// <summary>
        /// 智能营销活动的生效时间
        /// </summary>
        /// <value>智能营销活动的生效时间</value>
        [DataMember(Name = "gmt_enabled", EmitDefaultValue = false)]
        public string GmtEnabled { get; set; }

        /// <summary>
        /// 智能营销活动的结束时间
        /// </summary>
        /// <value>智能营销活动的结束时间</value>
        [DataMember(Name = "gmt_end", EmitDefaultValue = false)]
        public string GmtEnd { get; set; }

        /// <summary>
        /// 智能营销活动开始时间
        /// </summary>
        /// <value>智能营销活动开始时间</value>
        [DataMember(Name = "gmt_start", EmitDefaultValue = false)]
        public string GmtStart { get; set; }

        /// <summary>
        /// 智能营销商户子活动列表
        /// </summary>
        /// <value>智能营销商户子活动列表</value>
        [DataMember(Name = "merchant_promos", EmitDefaultValue = false)]
        public List<InteligentMerchantPromo> MerchantPromos { get; set; }

        /// <summary>
        /// 智能营销活动对应的名称
        /// </summary>
        /// <value>智能营销活动对应的名称</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets OwnerInfo
        /// </summary>
        [DataMember(Name = "owner_info", EmitDefaultValue = false)]
        public PromoOperatorInfo OwnerInfo { get; set; }

        /// <summary>
        /// 智能营销方案父id，如果需要续签智能营销活动，则会对于原有智能营销方案的id
        /// </summary>
        /// <value>智能营销方案父id，如果需要续签智能营销活动，则会对于原有智能营销方案的id</value>
        [DataMember(Name = "parent_promo_id", EmitDefaultValue = false)]
        public string ParentPromoId { get; set; }

        /// <summary>
        /// 智能营销活动对应的方案编号
        /// </summary>
        /// <value>智能营销活动对应的方案编号</value>
        [DataMember(Name = "plan_id", EmitDefaultValue = false)]
        public string PlanId { get; set; }

        /// <summary>
        /// 智能营销方案id。《koubei.marketing.campaign.intelligent.promo.create》创建接口中这个参数不必传递，仅在查询接口中返回
        /// </summary>
        /// <value>智能营销方案id。《koubei.marketing.campaign.intelligent.promo.create》创建接口中这个参数不必传递，仅在查询接口中返回</value>
        [DataMember(Name = "promo_id", EmitDefaultValue = false)]
        public string PromoId { get; set; }

        /// <summary>
        /// 营销活动详情列表，注意：（该参数20180125开始已不在维护，替代参数详见merchant_promos，如需接入替代参数，接之前先找开发负责人申请appid白名单）
        /// </summary>
        /// <value>营销活动详情列表，注意：（该参数20180125开始已不在维护，替代参数详见merchant_promos，如需接入替代参数，接之前先找开发负责人申请appid白名单）</value>
        [DataMember(Name = "promos", EmitDefaultValue = false)]
        public List<IntelligentPromoDetail> Promos { get; set; }

        /// <summary>
        /// 智能营销活动状态。CREATED：已创建；ENABLED：已生效；CLOSED：已关闭；FINISHED：已完结；DISABLED:已失效（有两种情况会是失效状态，一种是服务商创建方案，商户驳回，一种是服务商创建方案，商户未确认，活动到期。）（注意：修改方案的动作不需要传递方案状态）
        /// </summary>
        /// <value>智能营销活动状态。CREATED：已创建；ENABLED：已生效；CLOSED：已关闭；FINISHED：已完结；DISABLED:已失效（有两种情况会是失效状态，一种是服务商创建方案，商户驳回，一种是服务商创建方案，商户未确认，活动到期。）（注意：修改方案的动作不需要传递方案状态）</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// 该智能营销方案如果续签多次，则会返回该方案对应的所有智能营销子方案的promo_id
        /// </summary>
        /// <value>该智能营销方案如果续签多次，则会返回该方案对应的所有智能营销子方案的promo_id</value>
        [DataMember(Name = "sub_promo_ids", EmitDefaultValue = false)]
        public List<string> SubPromoIds { get; set; }

        /// <summary>
        /// 活动展示状态。已创建：CREATED；  REJECTED：创建被驳回；ENABLING：生效中；ONLINE_WAIT_CONFIRM：上架待确认；PUBLISHED：已发布（活动未到开始时间）；ENABLED：已发布已开始；OFFLINE_WAIT_CONFIRM：下架待确认；CLOSING：下架中；CLOSED：已下架（人为干预下架）；FINISHED：已结束（活动到期自然结束）；MODIFYING：修改中；MODIFY_WAIT_CONFIRM：修改待确认；DISABLED：已失效  （注意：修改接口子状态参数不能传递）
        /// </summary>
        /// <value>活动展示状态。已创建：CREATED；  REJECTED：创建被驳回；ENABLING：生效中；ONLINE_WAIT_CONFIRM：上架待确认；PUBLISHED：已发布（活动未到开始时间）；ENABLED：已发布已开始；OFFLINE_WAIT_CONFIRM：下架待确认；CLOSING：下架中；CLOSED：已下架（人为干预下架）；FINISHED：已结束（活动到期自然结束）；MODIFYING：修改中；MODIFY_WAIT_CONFIRM：修改待确认；DISABLED：已失效  （注意：修改接口子状态参数不能传递）</value>
        [DataMember(Name = "sub_status", EmitDefaultValue = false)]
        public string SubStatus { get; set; }

        /// <summary>
        /// 智能营销活动对应的方案中的模板编号
        /// </summary>
        /// <value>智能营销活动对应的方案中的模板编号</value>
        [DataMember(Name = "template_id", EmitDefaultValue = false)]
        public string TemplateId { get; set; }

        /// <summary>
        /// 智能活动类型，值如下：RECOMMENDATION：系统推荐；REGISTRATION：报名。在创建时，这个字段需要ISV自己进行决策，在推荐接口会返回优惠力度，比如代金券面额等信息，ISV判断如果优惠力度比这个大或者相同，就用RECOMMENDATION，其他情况用REGISTRATION，如推荐力度大于实际创建传过来的优惠力度，则创建的时候系统会自动将RECOMMENDATION改为REGISTRATION
        /// </summary>
        /// <value>智能活动类型，值如下：RECOMMENDATION：系统推荐；REGISTRATION：报名。在创建时，这个字段需要ISV自己进行决策，在推荐接口会返回优惠力度，比如代金券面额等信息，ISV判断如果优惠力度比这个大或者相同，就用RECOMMENDATION，其他情况用REGISTRATION，如推荐力度大于实际创建传过来的优惠力度，则创建的时候系统会自动将RECOMMENDATION改为REGISTRATION</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IntelligentPromo {\n");
            sb.Append("  AllowAutoDelay: ").Append(AllowAutoDelay).Append("\n");
            sb.Append("  AuditStatus: ").Append(AuditStatus).Append("\n");
            sb.Append("  CreateRequestNo: ").Append(CreateRequestNo).Append("\n");
            sb.Append("  CreatorInfo: ").Append(CreatorInfo).Append("\n");
            sb.Append("  Desc: ").Append(Desc).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  ForecastEffect: ").Append(ForecastEffect).Append("\n");
            sb.Append("  GmtClosed: ").Append(GmtClosed).Append("\n");
            sb.Append("  GmtEnabled: ").Append(GmtEnabled).Append("\n");
            sb.Append("  GmtEnd: ").Append(GmtEnd).Append("\n");
            sb.Append("  GmtStart: ").Append(GmtStart).Append("\n");
            sb.Append("  MerchantPromos: ").Append(MerchantPromos).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OwnerInfo: ").Append(OwnerInfo).Append("\n");
            sb.Append("  ParentPromoId: ").Append(ParentPromoId).Append("\n");
            sb.Append("  PlanId: ").Append(PlanId).Append("\n");
            sb.Append("  PromoId: ").Append(PromoId).Append("\n");
            sb.Append("  Promos: ").Append(Promos).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  SubPromoIds: ").Append(SubPromoIds).Append("\n");
            sb.Append("  SubStatus: ").Append(SubStatus).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IntelligentPromo);
        }

        /// <summary>
        /// Returns true if IntelligentPromo instances are equal
        /// </summary>
        /// <param name="input">Instance of IntelligentPromo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IntelligentPromo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AllowAutoDelay == input.AllowAutoDelay ||
                    this.AllowAutoDelay.Equals(input.AllowAutoDelay)
                ) && 
                (
                    this.AuditStatus == input.AuditStatus ||
                    (this.AuditStatus != null &&
                    this.AuditStatus.Equals(input.AuditStatus))
                ) && 
                (
                    this.CreateRequestNo == input.CreateRequestNo ||
                    (this.CreateRequestNo != null &&
                    this.CreateRequestNo.Equals(input.CreateRequestNo))
                ) && 
                (
                    this.CreatorInfo == input.CreatorInfo ||
                    (this.CreatorInfo != null &&
                    this.CreatorInfo.Equals(input.CreatorInfo))
                ) && 
                (
                    this.Desc == input.Desc ||
                    (this.Desc != null &&
                    this.Desc.Equals(input.Desc))
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    (this.ExtInfo != null &&
                    this.ExtInfo.Equals(input.ExtInfo))
                ) && 
                (
                    this.ForecastEffect == input.ForecastEffect ||
                    (this.ForecastEffect != null &&
                    this.ForecastEffect.Equals(input.ForecastEffect))
                ) && 
                (
                    this.GmtClosed == input.GmtClosed ||
                    (this.GmtClosed != null &&
                    this.GmtClosed.Equals(input.GmtClosed))
                ) && 
                (
                    this.GmtEnabled == input.GmtEnabled ||
                    (this.GmtEnabled != null &&
                    this.GmtEnabled.Equals(input.GmtEnabled))
                ) && 
                (
                    this.GmtEnd == input.GmtEnd ||
                    (this.GmtEnd != null &&
                    this.GmtEnd.Equals(input.GmtEnd))
                ) && 
                (
                    this.GmtStart == input.GmtStart ||
                    (this.GmtStart != null &&
                    this.GmtStart.Equals(input.GmtStart))
                ) && 
                (
                    this.MerchantPromos == input.MerchantPromos ||
                    this.MerchantPromos != null &&
                    input.MerchantPromos != null &&
                    this.MerchantPromos.SequenceEqual(input.MerchantPromos)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.OwnerInfo == input.OwnerInfo ||
                    (this.OwnerInfo != null &&
                    this.OwnerInfo.Equals(input.OwnerInfo))
                ) && 
                (
                    this.ParentPromoId == input.ParentPromoId ||
                    (this.ParentPromoId != null &&
                    this.ParentPromoId.Equals(input.ParentPromoId))
                ) && 
                (
                    this.PlanId == input.PlanId ||
                    (this.PlanId != null &&
                    this.PlanId.Equals(input.PlanId))
                ) && 
                (
                    this.PromoId == input.PromoId ||
                    (this.PromoId != null &&
                    this.PromoId.Equals(input.PromoId))
                ) && 
                (
                    this.Promos == input.Promos ||
                    this.Promos != null &&
                    input.Promos != null &&
                    this.Promos.SequenceEqual(input.Promos)
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.SubPromoIds == input.SubPromoIds ||
                    this.SubPromoIds != null &&
                    input.SubPromoIds != null &&
                    this.SubPromoIds.SequenceEqual(input.SubPromoIds)
                ) && 
                (
                    this.SubStatus == input.SubStatus ||
                    (this.SubStatus != null &&
                    this.SubStatus.Equals(input.SubStatus))
                ) && 
                (
                    this.TemplateId == input.TemplateId ||
                    (this.TemplateId != null &&
                    this.TemplateId.Equals(input.TemplateId))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.AllowAutoDelay.GetHashCode();
                if (this.AuditStatus != null)
                {
                    hashCode = (hashCode * 59) + this.AuditStatus.GetHashCode();
                }
                if (this.CreateRequestNo != null)
                {
                    hashCode = (hashCode * 59) + this.CreateRequestNo.GetHashCode();
                }
                if (this.CreatorInfo != null)
                {
                    hashCode = (hashCode * 59) + this.CreatorInfo.GetHashCode();
                }
                if (this.Desc != null)
                {
                    hashCode = (hashCode * 59) + this.Desc.GetHashCode();
                }
                if (this.ExtInfo != null)
                {
                    hashCode = (hashCode * 59) + this.ExtInfo.GetHashCode();
                }
                if (this.ForecastEffect != null)
                {
                    hashCode = (hashCode * 59) + this.ForecastEffect.GetHashCode();
                }
                if (this.GmtClosed != null)
                {
                    hashCode = (hashCode * 59) + this.GmtClosed.GetHashCode();
                }
                if (this.GmtEnabled != null)
                {
                    hashCode = (hashCode * 59) + this.GmtEnabled.GetHashCode();
                }
                if (this.GmtEnd != null)
                {
                    hashCode = (hashCode * 59) + this.GmtEnd.GetHashCode();
                }
                if (this.GmtStart != null)
                {
                    hashCode = (hashCode * 59) + this.GmtStart.GetHashCode();
                }
                if (this.MerchantPromos != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantPromos.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.OwnerInfo != null)
                {
                    hashCode = (hashCode * 59) + this.OwnerInfo.GetHashCode();
                }
                if (this.ParentPromoId != null)
                {
                    hashCode = (hashCode * 59) + this.ParentPromoId.GetHashCode();
                }
                if (this.PlanId != null)
                {
                    hashCode = (hashCode * 59) + this.PlanId.GetHashCode();
                }
                if (this.PromoId != null)
                {
                    hashCode = (hashCode * 59) + this.PromoId.GetHashCode();
                }
                if (this.Promos != null)
                {
                    hashCode = (hashCode * 59) + this.Promos.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.SubPromoIds != null)
                {
                    hashCode = (hashCode * 59) + this.SubPromoIds.GetHashCode();
                }
                if (this.SubStatus != null)
                {
                    hashCode = (hashCode * 59) + this.SubStatus.GetHashCode();
                }
                if (this.TemplateId != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateId.GetHashCode();
                }
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
