/*
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-07-17
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AlipaySDKNet.OpenAPI.Client.OpenAPIDateConverter;

namespace AlipaySDKNet.OpenAPI.Model
{
    /// <summary>
    /// KoubeiMarketingCampaignIntelligentShopConsultModel
    /// </summary>
    [DataContract(Name = "KoubeiMarketingCampaignIntelligentShopConsultModel")]
    public partial class KoubeiMarketingCampaignIntelligentShopConsultModel : IEquatable<KoubeiMarketingCampaignIntelligentShopConsultModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KoubeiMarketingCampaignIntelligentShopConsultModel" /> class.
        /// </summary>
        /// <param name="bizScene">根据不同场景,过滤不同的门店数据,可参考值:CREATE_NORMAL:正常创建;RENEWAL_OLD:原方案续期;RENEWAL_NEW:新方案续期.</param>
        /// <param name="operatorContext">operatorContext.</param>
        /// <param name="outRequestNo">外部业务id，请尽量保持足够的复杂，方便定位数据来源.</param>
        /// <param name="pageIndex">当前页码，默认：“1”.</param>
        /// <param name="pageSize">每页项数[1, 500]， 默认500.</param>
        /// <param name="partnerId">商户和支付宝交互时，用于代表支付宝分配给商户ID.</param>
        /// <param name="planId">智能营销方案的方案id（template_code替代该值，无需传递）.</param>
        /// <param name="promoId">结合biz_scene一起使用,值为RENEWAL_OLD:原方案续期、RENEWAL_NEW:新方案续期,要求必传.</param>
        /// <param name="templateCode">营销模板的编号，默认GENERAL_EXPERIENCE（不传值）  可选枚举：  GENERAL_EXPERIENCE：全场体验；  GENERAL_NORMAL：全场普通；  GENERAL_20171212：全场2017双12版；  CROWD_EXPERIENCE：千人千券体验；  CROWD_NORMAL：千人千券普通；  CROWD_20171212：千人千券2017双12版；.</param>
        public KoubeiMarketingCampaignIntelligentShopConsultModel(string bizScene = default(string), PromoOperatorInfo operatorContext = default(PromoOperatorInfo), string outRequestNo = default(string), string pageIndex = default(string), string pageSize = default(string), string partnerId = default(string), string planId = default(string), string promoId = default(string), string templateCode = default(string))
        {
            this.BizScene = bizScene;
            this.OperatorContext = operatorContext;
            this.OutRequestNo = outRequestNo;
            this.PageIndex = pageIndex;
            this.PageSize = pageSize;
            this.PartnerId = partnerId;
            this.PlanId = planId;
            this.PromoId = promoId;
            this.TemplateCode = templateCode;
        }

        /// <summary>
        /// 根据不同场景,过滤不同的门店数据,可参考值:CREATE_NORMAL:正常创建;RENEWAL_OLD:原方案续期;RENEWAL_NEW:新方案续期
        /// </summary>
        /// <value>根据不同场景,过滤不同的门店数据,可参考值:CREATE_NORMAL:正常创建;RENEWAL_OLD:原方案续期;RENEWAL_NEW:新方案续期</value>
        [DataMember(Name = "biz_scene", EmitDefaultValue = false)]
        public string BizScene { get; set; }

        /// <summary>
        /// Gets or Sets OperatorContext
        /// </summary>
        [DataMember(Name = "operator_context", EmitDefaultValue = false)]
        public PromoOperatorInfo OperatorContext { get; set; }

        /// <summary>
        /// 外部业务id，请尽量保持足够的复杂，方便定位数据来源
        /// </summary>
        /// <value>外部业务id，请尽量保持足够的复杂，方便定位数据来源</value>
        [DataMember(Name = "out_request_no", EmitDefaultValue = false)]
        public string OutRequestNo { get; set; }

        /// <summary>
        /// 当前页码，默认：“1”
        /// </summary>
        /// <value>当前页码，默认：“1”</value>
        [DataMember(Name = "page_index", EmitDefaultValue = false)]
        public string PageIndex { get; set; }

        /// <summary>
        /// 每页项数[1, 500]， 默认500
        /// </summary>
        /// <value>每页项数[1, 500]， 默认500</value>
        [DataMember(Name = "page_size", EmitDefaultValue = false)]
        public string PageSize { get; set; }

        /// <summary>
        /// 商户和支付宝交互时，用于代表支付宝分配给商户ID
        /// </summary>
        /// <value>商户和支付宝交互时，用于代表支付宝分配给商户ID</value>
        [DataMember(Name = "partner_id", EmitDefaultValue = false)]
        public string PartnerId { get; set; }

        /// <summary>
        /// 智能营销方案的方案id（template_code替代该值，无需传递）
        /// </summary>
        /// <value>智能营销方案的方案id（template_code替代该值，无需传递）</value>
        [DataMember(Name = "plan_id", EmitDefaultValue = false)]
        public string PlanId { get; set; }

        /// <summary>
        /// 结合biz_scene一起使用,值为RENEWAL_OLD:原方案续期、RENEWAL_NEW:新方案续期,要求必传
        /// </summary>
        /// <value>结合biz_scene一起使用,值为RENEWAL_OLD:原方案续期、RENEWAL_NEW:新方案续期,要求必传</value>
        [DataMember(Name = "promo_id", EmitDefaultValue = false)]
        public string PromoId { get; set; }

        /// <summary>
        /// 营销模板的编号，默认GENERAL_EXPERIENCE（不传值）  可选枚举：  GENERAL_EXPERIENCE：全场体验；  GENERAL_NORMAL：全场普通；  GENERAL_20171212：全场2017双12版；  CROWD_EXPERIENCE：千人千券体验；  CROWD_NORMAL：千人千券普通；  CROWD_20171212：千人千券2017双12版；
        /// </summary>
        /// <value>营销模板的编号，默认GENERAL_EXPERIENCE（不传值）  可选枚举：  GENERAL_EXPERIENCE：全场体验；  GENERAL_NORMAL：全场普通；  GENERAL_20171212：全场2017双12版；  CROWD_EXPERIENCE：千人千券体验；  CROWD_NORMAL：千人千券普通；  CROWD_20171212：千人千券2017双12版；</value>
        [DataMember(Name = "template_code", EmitDefaultValue = false)]
        public string TemplateCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KoubeiMarketingCampaignIntelligentShopConsultModel {\n");
            sb.Append("  BizScene: ").Append(BizScene).Append("\n");
            sb.Append("  OperatorContext: ").Append(OperatorContext).Append("\n");
            sb.Append("  OutRequestNo: ").Append(OutRequestNo).Append("\n");
            sb.Append("  PageIndex: ").Append(PageIndex).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  PartnerId: ").Append(PartnerId).Append("\n");
            sb.Append("  PlanId: ").Append(PlanId).Append("\n");
            sb.Append("  PromoId: ").Append(PromoId).Append("\n");
            sb.Append("  TemplateCode: ").Append(TemplateCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KoubeiMarketingCampaignIntelligentShopConsultModel);
        }

        /// <summary>
        /// Returns true if KoubeiMarketingCampaignIntelligentShopConsultModel instances are equal
        /// </summary>
        /// <param name="input">Instance of KoubeiMarketingCampaignIntelligentShopConsultModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KoubeiMarketingCampaignIntelligentShopConsultModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BizScene == input.BizScene ||
                    (this.BizScene != null &&
                    this.BizScene.Equals(input.BizScene))
                ) && 
                (
                    this.OperatorContext == input.OperatorContext ||
                    (this.OperatorContext != null &&
                    this.OperatorContext.Equals(input.OperatorContext))
                ) && 
                (
                    this.OutRequestNo == input.OutRequestNo ||
                    (this.OutRequestNo != null &&
                    this.OutRequestNo.Equals(input.OutRequestNo))
                ) && 
                (
                    this.PageIndex == input.PageIndex ||
                    (this.PageIndex != null &&
                    this.PageIndex.Equals(input.PageIndex))
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    (this.PageSize != null &&
                    this.PageSize.Equals(input.PageSize))
                ) && 
                (
                    this.PartnerId == input.PartnerId ||
                    (this.PartnerId != null &&
                    this.PartnerId.Equals(input.PartnerId))
                ) && 
                (
                    this.PlanId == input.PlanId ||
                    (this.PlanId != null &&
                    this.PlanId.Equals(input.PlanId))
                ) && 
                (
                    this.PromoId == input.PromoId ||
                    (this.PromoId != null &&
                    this.PromoId.Equals(input.PromoId))
                ) && 
                (
                    this.TemplateCode == input.TemplateCode ||
                    (this.TemplateCode != null &&
                    this.TemplateCode.Equals(input.TemplateCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BizScene != null)
                {
                    hashCode = (hashCode * 59) + this.BizScene.GetHashCode();
                }
                if (this.OperatorContext != null)
                {
                    hashCode = (hashCode * 59) + this.OperatorContext.GetHashCode();
                }
                if (this.OutRequestNo != null)
                {
                    hashCode = (hashCode * 59) + this.OutRequestNo.GetHashCode();
                }
                if (this.PageIndex != null)
                {
                    hashCode = (hashCode * 59) + this.PageIndex.GetHashCode();
                }
                if (this.PageSize != null)
                {
                    hashCode = (hashCode * 59) + this.PageSize.GetHashCode();
                }
                if (this.PartnerId != null)
                {
                    hashCode = (hashCode * 59) + this.PartnerId.GetHashCode();
                }
                if (this.PlanId != null)
                {
                    hashCode = (hashCode * 59) + this.PlanId.GetHashCode();
                }
                if (this.PromoId != null)
                {
                    hashCode = (hashCode * 59) + this.PromoId.GetHashCode();
                }
                if (this.TemplateCode != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateCode.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
